import { ReactElement } from 'react';
import { ValidationMode } from '..';
import { Config as RecaptchaConfig } from '../hooks/useRecaptcha';
import { FieldPack, Fields, FormValues } from './util';

/** Configuration object for the main hook */
export interface Config<T extends Fields> {
  /** Required, the name of this form. Necessary for the use of IDs */
  name: string;

  /** Required, declares the fields of the form */
  fields: T;

  /** Optional, defines the form fields used for this form */
  fieldPack?: FieldPack;

  /** Optional, defines the global form validation mode. Defaults to `ValidationModes.AFTER_BLUR` */
  validationMode?: ValidationMode;

  /** Optional, adds a recaptcha check to the form */
  recaptcha?: RecaptchaConfig;

  /** Optional, configures the submit button on the form */
  submitButton?: {
    /** Optional, the text displayed on the submit button */
    label?: string;
    /** Optional, the text displayed on the submit button while the form is submitting */
    submittingLabel?: string;
    /** Optional, if the submit button should be visible to the user */
    hidden?: boolean;
  };

  /** Optional, the void function that fires on a form change event */
  onChange?: (formValues: FormValues<T>) => void | Promise<void>;

  /** Optional, the void function that fires on a form submission event */
  onSubmit?: (
    formValues: FormValues<T>,
    formHelpers: { recaptchaToken?: string },
  ) => void | Promise<void>;
}

/** The state object returned by the hook */
export interface State {
  /** The form component generated by the hook */
  form: ReactElement;

  /** The submit button generated by the hook */
  submitButton: ReactElement;
}
