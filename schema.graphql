### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Attribute {
  createdAt: DateTime!
  history: [AttributeInventoryHistory!]!
  id: ID!
  inventory: [AttributeInventory!]!
  name: String!
  namePlural: String!
  projects: [AttributesOnProject!]!
  subthemes: [AttributesOnSubtheme!]!
  team: Team!
  teamId: String!
  updatedAt: DateTime!
}

type AttributeInventory {
  amount: Int!
  attribute: Attribute!
  attributeId: String!
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type AttributeInventoryHistory {
  attribute: Attribute!
  attributeId: String!
  createdAt: DateTime!
  fieldName: String!
  id: ID!
  newValue: String!
  oldValue: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type AttributesOnEvent {
  amount: Int!
  attribute: Attribute!
  attributeId: String!
  user: User!
  userId: String!
}

type AttributesOnProject {
  amount: Int!
  attribute: Attribute!
  attributeId: String!
  createdAt: DateTime!
  id: ID!
  project: ProjectPart!
  projectId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type AttributesOnSubtheme {
  amount: Int!
  attribute: Attribute!
  attributeId: String!
  createdAt: DateTime!
  id: ID!
  subtheme: Subtheme!
  subthemeId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Event {
  attributes: [AttributesOnEvent!]!
  createdAt: DateTime!
  date: DateTime!
  id: ID!
  img: String!
  name: String!
  slug: String!

  """The number of dominoes assigned to this event in total"""
  stoneAmount: Int!
  subthemes: [Subtheme!]!
  team: Team!
  teamId: String!
  updatedAt: DateTime!
}

type Member {
  createdAt: DateTime!
  id: ID!
  role: Role!
  team: Team!
  teamId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type Mutation {
  """Generate a new session for a user with an active account"""
  login(email: String!, isPermanent: Boolean!, password: String!): String!

  """Invalidate an active session"""
  logout: Session!

  """Set the `team` field of an active session"""
  setSessionTeam(teamId: String!): Session!
  updateAttributeInventory(amount: Int!, attributeId: String!, userId: String!): AttributeInventory
  updateStoneInventory(amount: Int!, stoneId: String!, userId: String!): StoneInventory
}

type Project {
  createdAt: DateTime!
  description: String
  history: [ProjectHistory!]!
  id: ID!
  name: String!
  number: Int!
  parts: [ProjectPart!]!
  slug: String!
  stats: [StatsOnProject!]!
  status: ProjectStatus!

  """The number of dominoes assigned to this project"""
  stoneAmount: Int!
  subtheme: Subtheme!
  subthemeId: String!
  supervisor: User
  supervisorId: String
  updatedAt: DateTime!
}

type ProjectHistory {
  createdAt: DateTime!
  fieldName: String!
  id: ID!
  newValue: String!
  oldValue: String!
  project: Project!
  projectId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type ProjectPart {
  attributes: [AttributesOnProject!]!
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  number: Int!
  project: Project!
  projectId: String!
  slug: String!
  stones: [StonesOnProject!]!
  type: ProjectType!
  updatedAt: DateTime!
}

enum ProjectStatus {
  BUILDING
  BUILT
  CANCELLED
  COUNTED
  DESIGNED
  DESIGNING
  PLANNED
  READY
}

enum ProjectType {
  DECOR
  FALLWALL
  FIELD_CIRCLE
  FIELD_CROSS_L1
  FIELD_CROSS_L2
  FIELD_CROSS_M50
  FIELD_FLAT
  FIELD_L1
  FIELD_L2
  FIELD_M50
  FREE_HAND
  OTHER
  SPIRAL
  STRUCTURE
  WALL_CUBE
  WALL_OCTO
  WALL_S
  WALL_SPEED
  WALL_T
  WALL_X
}

type Query {
  """Get a single attribute inventory record"""
  attributeInventory(attributeId: String!, userId: String!): AttributeInventory

  """Get all attributes of a team"""
  attributes: [Attribute!]!
  event(eventSlug: String!): Event
  events: [Event!]!

  """Find all users of this team that have a nonzero inventory in this team"""
  inventoryUsers: [User!]!

  """Fetches a project based on its slug"""
  project(eventSlug: String!, projectSlug: String!): Project

  """Get session by its token"""
  session(token: String!): Session

  """Get a single stone inventory record"""
  stoneInventory(stoneId: String!, userId: String!): StoneInventory

  """Get all stonetypes of a team"""
  stoneTypes: [StoneType!]!

  """Get all stones of a team"""
  stones: [Stone!]!

  """Fetch the teams that the user is a member of"""
  teams: [Team!]!

  """Find user by its slug"""
  user(userSlug: String!): User

  """Get the attribute inventory of a user in a team"""
  userAttributeInventory(userSlug: String!): [AttributeInventory!]!

  """Get stone inventory of a user in a team"""
  userStoneInventory(userSlug: String!): [StoneInventory!]!

  """Find all users of this team"""
  users: [User!]!
}

enum Role {
  BUILDER
  CAPTAIN
  GUEST
}

type Session {
  createdAt: DateTime!
  expiresAt: DateTime
  id: ID!
  member: Member
  team: Team
  teamId: String
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type Stat {
  createdAt: DateTime!
  id: ID!
  name: String!
  projects: [StatsOnProject!]!
  team: Team!
  teamId: String!
  updatedAt: DateTime!
}

type StatsOnProject {
  createdAt: DateTime!
  id: ID!
  project: Project!
  projectId: String!
  stat: Stat!
  statId: String!
  updatedAt: DateTime!
  value: String!
}

type Stone {
  alias: String!
  alias2: String
  createdAt: DateTime!
  description: String
  hex: String!
  hex2: String
  history: [StoneInventoryHistory!]!
  id: ID!
  inventory: [StoneInventory!]!
  name: String!
  order: Int!
  projects: [StonesOnProject!]!
  stoneType: StoneType!
  stoneTypeId: String!
  subthemes: [StonesOnSubtheme!]!
  updatedAt: DateTime!
}

type StoneInventory {
  amount: Int!
  createdAt: DateTime!
  id: ID!
  stone: Stone!
  stoneId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type StoneInventoryHistory {
  createdAt: DateTime!
  fieldName: String!
  id: ID!
  newValue: String!
  oldValue: String!
  stone: Stone!
  stoneId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type StoneType {
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  order: Int!
  stones: [Stone!]!
  team: Team!
  teamId: String!
  updatedAt: DateTime!
}

type StonesOnProject {
  amount: Int!
  createdAt: DateTime!
  id: ID!
  project: ProjectPart!
  projectId: String!
  stone: Stone!
  stoneId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type StonesOnSubtheme {
  amount: Int!
  createdAt: DateTime!
  id: ID!
  stone: Stone!
  stoneId: String!
  subtheme: Subtheme!
  subthemeId: String!
  updatedAt: DateTime!
  user: User!
  userId: String!
}

type Subtheme {
  attributes: [AttributesOnSubtheme!]!
  color: String!
  createdAt: DateTime!
  event: Event!
  eventId: String!
  id: ID!
  name: String!
  order: Int!
  projects: [Project!]!
  slug: String!

  """The number of dominoes assigned to this subtheme in total"""
  stoneAmount: Int!
  stones: [StonesOnSubtheme!]!
  updatedAt: DateTime!
}

type Team {
  attributes: [Attribute!]!
  createdAt: DateTime!
  events: [Event!]!
  id: ID!
  members: [Member!]!
  name: String!
  sessions: [Session!]!
  stats: [Stat!]!
  stoneTypes: [StoneType!]!
  updatedAt: DateTime!
}

type User {
  attributeInventory: [AttributeInventory!]!
  attributeInventoryHistory: [AttributeInventoryHistory!]!
  attributesOnProjects: [AttributesOnProject!]!
  attributesOnSubthemes: [AttributesOnSubtheme!]!
  avatar: String
  createdAt: DateTime!
  displayName: String!
  email: String!
  firstName: String!
  id: ID!
  isAdmin: Boolean!
  lastName: String!
  projectHistory: [ProjectHistory!]!

  """The projects that this user supervises"""
  projects: [Project!]!
  sessions: [Session!]!
  slug: String!

  """The number of dominoes this user posesses"""
  stoneAmount: Int!
  stoneInventory: [StoneInventory!]!
  stoneInventoryHistory: [StoneInventoryHistory!]!
  stonesOnProjects: [StonesOnProject!]!
  stonesOnSubthemes: [StonesOnSubtheme!]!

  """The teams this user is a member of"""
  teams: [Member!]!
  updatedAt: DateTime!
}